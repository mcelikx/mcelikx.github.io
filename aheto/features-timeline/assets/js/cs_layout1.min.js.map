{"version":3,"sources":["aheto/features-timeline/assets/js/cs_layout1.js"],"names":["$","window","document","timelines","eventsMinDistance","translateValue","getTranslateValue","timelineComponents","string","wrapperWidth","Number","css","replace","translateTimeline","timelineTotWidth","showNewContent","newContent","visibleContent","find","next","prev","updateFilling","updateVisibleContent","newEvent","parent","children","selectedDate","removeClass","updateOlderEvents","updateTimelinePosition","eventStyle","getPropertyValue","event","get","timelineTranslate","timelineWidth","eventLeft","totWidth","value","setTransformValue","eventsWrapper","addClass","selectedEvent","eventWidth","scaleValue","filling","classEnetering","classLeaving","eventsContent","eventDate","data","selectedContent","height","index","attr","one","prevAll","timeline","end","nextAll","timelineStyle","property","style","indexOf","split","events","each","element","dateComp","newDate","dateArrays","Math","apply","second","round","first","elementInViewport","el","top","offsetTop","width","offsetWidth","offsetHeight","offsetParent","getComputedStyle","pageYOffset","innerHeight","left","pageXOffset","innerWidth","checkMQ","querySelector","length","initTimeline","this","minLapse","Date","dateDistances","push","distance","parseDate","dates","i","distanceNorm","min","daydiff","eq","setDatePosition","timeSpanNorm","totalWidth","setTimelineWidth","on","last","hasClass","setTimeout","updateSlide","preventDefault","keyup","which","jQuery"],"mappings":"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","file":"cs_layout1.min.js","sourcesContent":[";(function ($, window, document, undefined) {\n\n    let timelines = $('.aheto-timeline--rela-modern'),\n        eventsMinDistance = 100;\n\n    (timelines.length > 0) && initTimeline(timelines);\n\n\n    function initTimeline(timelines) {\n        timelines.each(function () {\n\n            const timeline = $(this),\n                timelineComponents = {};\n\n            /* cache timeline components */\n            timelineComponents['timelineWrapper'] = timeline.find('.aheto-timeline__events-wrapper');\n            timelineComponents['eventsWrapper'] = timelineComponents['timelineWrapper'].children('.aheto-timeline__events');\n            timelineComponents['fillingLine'] = timelineComponents['eventsWrapper'].children('.aheto-timeline__filling-line');\n            timelineComponents['timelineEvents'] = timelineComponents['eventsWrapper'].find('a');\n            timelineComponents['timelineDates'] = parseDate(timelineComponents['timelineEvents']);\n            timelineComponents['eventsMinLapse'] = minLapse(timelineComponents['timelineDates']);\n            timelineComponents['timelineNavigation'] = timeline.find('.aheto-timeline__navigation');\n            timelineComponents['eventsContent'] = timeline.children('.aheto-timeline__events-content');\n\n\n            /* assign a left postion to the single events along the timeline */\n            setDatePosition(timelineComponents, eventsMinDistance);\n            /* assign a width to the timeline */\n            let timelineTotWidth = setTimelineWidth(timelineComponents, eventsMinDistance);\n\n            /* the timeline has been initialize - show it */\n            timeline.addClass('loaded');\n\n\n            $(window).on('resize orientationchange', function () {\n                const timelineLastDate =  timelineComponents['eventsWrapper'].find('li').last().find('a');\n                if(timelineLastDate.hasClass('selected')){\n                    setTimeout(updateSlide, 100, timelineComponents, timelineTotWidth, 'next');\n                }\n            });\n\n            /* detect click on the next arrow */\n            timelineComponents['timelineNavigation'].on('click', '.next', function (event) {\n                event.preventDefault();\n                updateSlide(timelineComponents, timelineTotWidth, 'next');\n            });\n            /* detect click on the prev arrow */\n            timelineComponents['timelineNavigation'].on('click', '.prev', function (event) {\n                event.preventDefault();\n                updateSlide(timelineComponents, timelineTotWidth, 'prev');\n            });\n            /* detect click on the a single event - show new event content */\n            timelineComponents['eventsWrapper'].on('click', 'a', function (event) {\n                event.preventDefault();\n                timelineComponents['timelineEvents'].removeClass('selected');\n                $(this).addClass('selected');\n                updateOlderEvents($(this));\n                updateFilling($(this), timelineComponents['fillingLine'], timelineTotWidth);\n                updateVisibleContent($(this), timelineComponents['eventsContent']);\n            });\n\n            /* on swipe, show next/prev event content */\n            timelineComponents['eventsContent'].on('swipeleft', function () {\n                const mq = checkMQ();\n                (mq == 'mobile') && showNewContent(timelineComponents, timelineTotWidth, 'next');\n            });\n            timelineComponents['eventsContent'].on('swiperight', function () {\n                const mq = checkMQ();\n                (mq == 'mobile') && showNewContent(timelineComponents, timelineTotWidth, 'prev');\n            });\n\n            /* keyboard navigation */\n            $(document).keyup(function (event) {\n                if (event.which == '37' && elementInViewport(timeline.get(0))) {\n                    showNewContent(timelineComponents, timelineTotWidth, 'prev');\n                } else if (event.which == '39' && elementInViewport(timeline.get(0))) {\n                    showNewContent(timelineComponents, timelineTotWidth, 'next');\n                }\n            });\n        });\n    }\n\n\n\n\n    function updateSlide(timelineComponents, timelineTotWidth, string) {\n        /* retrieve translateX value of timelineComponents['eventsWrapper'] */\n        const translateValue = getTranslateValue(timelineComponents['eventsWrapper']),\n            wrapperWidth = Number(timelineComponents['timelineWrapper'].css('width').replace('px', ''));\n        /* translate the timeline to the left('next')/right('prev') */\n        (string == 'next')\n            ? translateTimeline(timelineComponents, translateValue - wrapperWidth + eventsMinDistance, wrapperWidth - timelineTotWidth)\n            : translateTimeline(timelineComponents, translateValue + wrapperWidth - eventsMinDistance);\n    }\n\n    function showNewContent(timelineComponents, timelineTotWidth, string) {\n        /* go from one event to the next/previous one */\n        const visibleContent = timelineComponents['eventsContent'].find('.selected'),\n            newContent = (string == 'next') ? visibleContent.next() : visibleContent.prev();\n\n        if (newContent.length > 0) { /* if there's a next/prev event - show it */\n            const selectedDate = timelineComponents['eventsWrapper'].find('.selected'),\n                newEvent = (string == 'next') ? selectedDate.parent('li').next('li').children('a') : selectedDate.parent('li').prev('li').children('a');\n\n            updateFilling(newEvent, timelineComponents['fillingLine'], timelineTotWidth);\n            updateVisibleContent(newEvent, timelineComponents['eventsContent']);\n            newEvent.addClass('selected');\n            selectedDate.removeClass('selected');\n            updateOlderEvents(newEvent);\n            updateTimelinePosition(string, newEvent, timelineComponents, timelineTotWidth);\n        }\n    }\n\n    function updateTimelinePosition(string, event, timelineComponents, timelineTotWidth) {\n        /* translate timeline to the left/right according to the position of the selected event */\n        const eventStyle = window.getComputedStyle(event.get(0), null),\n            eventLeft = Number(eventStyle.getPropertyValue(\"left\").replace('px', '')),\n            timelineWidth = Number(timelineComponents['timelineWrapper'].css('width').replace('px', ''));\n\n        timelineTotWidth = Number(timelineComponents['eventsWrapper'].css('width').replace('px', ''));\n        const timelineTranslate = getTranslateValue(timelineComponents['eventsWrapper']);\n\n        if ((string == 'next' && eventLeft > timelineWidth - timelineTranslate) || (string == 'prev' && eventLeft < -timelineTranslate)) {\n            translateTimeline(timelineComponents, -eventLeft + timelineWidth / 2, timelineWidth - timelineTotWidth);\n        }\n    }\n\n\n    function translateTimeline(timelineComponents, value, totWidth) {\n        const eventsWrapper = timelineComponents['eventsWrapper'].get(0);\n        value = (value > 0) ? 0 : value; /* only negative translate value */\n        value = (!(typeof totWidth === 'undefined') && value < totWidth) ? totWidth : value; /* do not translate more than timeline width */\n        setTransformValue(eventsWrapper, 'translateX', value + 'px');\n        /* update navigation arrows visibility */\n        (value == 0) ? timelineComponents['timelineNavigation'].find('.prev').addClass('inactive') : timelineComponents['timelineNavigation'].find('.prev').removeClass('inactive');\n        (value == totWidth) ? timelineComponents['timelineNavigation'].find('.next').addClass('inactive') : timelineComponents['timelineNavigation'].find('.next').removeClass('inactive');\n    }\n\n\n\n\n    function updateFilling(selectedEvent, filling, totWidth) {\n        /* change .aheto-timeline__filling-line length according to the selected event */\n        const eventStyle = window.getComputedStyle(selectedEvent.get(0), null);\n        let eventLeft = eventStyle.getPropertyValue(\"left\");\n        const eventWidth = eventStyle.getPropertyValue(\"width\");\n        eventLeft = Number(eventLeft.replace('px', '')) + Number(eventWidth.replace('px', '')) / 2;\n        const scaleValue = eventLeft / totWidth;\n        setTransformValue(filling.get(0), 'scaleX', scaleValue);\n    }\n\n    function setDatePosition(timelineComponents, min) {\n        for (let i = 0; i < timelineComponents['timelineDates'].length; i++) {\n            const distance = daydiff(timelineComponents['timelineDates'][0], timelineComponents['timelineDates'][i]),\n                distanceNorm = Math.round(distance / timelineComponents['eventsMinLapse']) + 2;\n            timelineComponents['timelineEvents'].eq(i).css('left', distanceNorm * min + 'px');\n        }\n    }\n\n    function setTimelineWidth(timelineComponents, width) {\n        const timeSpan = daydiff(timelineComponents['timelineDates'][0], timelineComponents['timelineDates'][timelineComponents['timelineDates'].length - 1]);\n        let timeSpanNorm = timeSpan / timelineComponents['eventsMinLapse'];\n        timeSpanNorm = Math.round(timeSpanNorm) + 4;\n        const totalWidth = timeSpanNorm * width;\n        timelineComponents['eventsWrapper'].css('width', totalWidth + 'px');\n        updateFilling(timelineComponents['timelineEvents'].eq(0), timelineComponents['fillingLine'], totalWidth);\n\n        return totalWidth;\n    }\n\n\n    function updateVisibleContent(event, eventsContent) {\n        const eventDate = event.data('date'),\n            visibleContent = eventsContent.find('.selected'),\n            selectedContent = eventsContent.find('[data-date=\"' + eventDate + '\"]'),\n            selectedContentHeight = selectedContent.height();\n        let classEnetering,\n            classLeaving;\n\n        if (selectedContent.index() > visibleContent.index()) {\n            classEnetering = 'selected enter-right';\n            classLeaving = 'leave-left';\n        } else {\n            classEnetering = 'selected enter-left';\n            classLeaving = 'leave-right';\n        }\n\n\n        selectedContent.attr('class', classEnetering);\n        visibleContent.attr('class', classLeaving).one('webkitAnimationEnd oanimationend msAnimationEnd animationend', function () {\n            visibleContent.removeClass('leave-right leave-left');\n            selectedContent.removeClass('enter-left enter-right');\n        });\n        eventsContent.css('height', selectedContentHeight + 'px');\n    }\n\n    function updateOlderEvents(event) {\n        event.parent('li').prevAll('li').children('a').addClass('older-event').end().end().nextAll('li').children('a').removeClass('older-event');\n    }\n\n    function getTranslateValue(timeline) {\n        const timelineStyle = window.getComputedStyle(timeline.get(0), null);\n        let timelineTranslate = timelineStyle.getPropertyValue(\"-webkit-transform\") ||\n            timelineStyle.getPropertyValue(\"-moz-transform\") ||\n            timelineStyle.getPropertyValue(\"-ms-transform\") ||\n            timelineStyle.getPropertyValue(\"-o-transform\") ||\n            timelineStyle.getPropertyValue(\"transform\");\n        let translateValue = 0;\n\n        if (timelineTranslate.indexOf('(') >= 0) {\n            timelineTranslate = timelineTranslate.split('(')[1];\n            timelineTranslate = timelineTranslate.split(')')[0];\n            timelineTranslate = timelineTranslate.split(',');\n            translateValue = timelineTranslate[4];\n        }\n\n\n        return Number(translateValue);\n    }\n\n    function setTransformValue(element, property, value) {\n        element.style[\"-webkit-transform\"] = property + \"(\" + value + \")\";\n        element.style[\"-moz-transform\"] = property + \"(\" + value + \")\";\n        element.style[\"-ms-transform\"] = property + \"(\" + value + \")\";\n        element.style[\"-o-transform\"] = property + \"(\" + value + \")\";\n        element.style[\"transform\"] = property + \"(\" + value + \")\";\n    }\n\n    /* based on http://stackoverflow.com/questions/542938/how-do-i-get-the-number-of-days-between-two-dates-in-javascript */\n    function parseDate(events) {\n        const dateArrays = [];\n        events.each(function () {\n            const dateComp = $(this).data('date'),\n                newDate = new Date(dateComp);\n            dateArrays.push(newDate);\n\n        });\n        return dateArrays;\n    }\n\n\n    function daydiff(first, second) {\n        return Math.round((second - first));\n    }\n\n    function minLapse(dates) {\n        /* determine the minimum distance among events */\n        const dateDistances = [];\n        for (let i = 1; i < dates.length; i++) {\n            const distance = daydiff(dates[i - 1], dates[i]);\n            dateDistances.push(distance);\n        }\n        return Math.min.apply(null, dateDistances);\n    }\n\n    /*\n        How to tell if a DOM element is visible in the current viewport?\n        http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\n    */\n    function elementInViewport(el) {\n        let top = el.offsetTop;\n        let left = el.offsetLeft;\n        let width = el.offsetWidth;\n        let height = el.offsetHeight;\n\n        while (el.offsetParent) {\n            el = el.offsetParent;\n            top += el.offsetTop;\n            left += el.offsetLeft;\n        }\n\n        return (\n            top < (window.pageYOffset + window.innerHeight) &&\n            left < (window.pageXOffset + window.innerWidth) &&\n            (top + height) > window.pageYOffset &&\n            (left + width) > window.pageXOffset\n        );\n    }\n\n    function checkMQ() {\n        /* check if mobile or desktop device */\n        return window.getComputedStyle(document.querySelector('.aheto-timeline--rela-modern'), '::before').getPropertyValue('content').replace(/'/g, \"\").replace(/\"/g, \"\");\n    }\n})(jQuery, window, document);"]}